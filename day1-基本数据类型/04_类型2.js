// 1、object表示一个对象,对象赋值和函赋值都可以，一般不使用object声明
var a;
a = {};
a = function () { };
// (1)对象写法
// {}用来指定对象中可以包含哪些属性，结构必须一模一样
// 语法：{属性名：属性值，属性名：属性值...}
// 属性名? 表示 该属性为可选属性
var b;
b = { name: '孙悟空', age: 18 };
// [propName:string]:any 表示任意类型的string属性   propName-属性名，自定义命名      
var c;
c = { name: '猪八戒', age: 19, sex: '男', test: '测试' };
// (2)设置函数结构的类型声明
// 语法:(形参:类型,形参:类型,...)=>返回值
var d;
d = function (n1, n2) {
    return n1 + n2;
};
// -------------------------------------------------------------------------------------------
//  2、数组的类型声明
/*
    语法：
        类型[];
        Array<类型>
 */
// 字符串数组
var e;
e = ['a', 'b', 'c'];
// 数字类型数组
var f;
var g;
// -------------------------------------------------------------------------------------------
// 3、元组
// 元组就是固定长度的数组
// 语法:[类型,类型...]
// 指定元组的一个是string类型，另一个是number类型
var h;
h = ['hello', 123];
// -------------------------------------------------------------------------------------------
// 4、enum枚举
var Gender;
(function (Gender) {
    Gender[Gender["Male"] = 1] = "Male";
    Gender[Gender["Female"] = 2] = "Female";
})(Gender || (Gender = {}));
var i;
i = {
    name: '孙悟空',
    gender: Gender.Male
};
console.log(i);
